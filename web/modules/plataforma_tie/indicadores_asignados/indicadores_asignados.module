<?php


use Drupal\taxonomy\Entity\Term;


/**
 * Implements hook_form_alter().
 */
function indicadores_asignados_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id)
{
  if ($form_id == 'node_indicadores_form'||$form_id=='node_indicadores_edit_form'){
    $opciones_empresas = $form['field_empresa']['widget']['#options'];
    $options = pertenece_empresa($opciones_empresas);
    $form['field_empresa']['widget']['#options'] = $options;
    //$form['actions']['submit']['#submit'][]='add_title_indicadores_form_submit';
  }
}

function indicadores_asignados_node_presave(\Drupal\node\NodeInterface $node){
  if ($node->bundle() == 'indicadores'){
    //Datos para generar titulo
    $id_empresa = $node->get('field_empresa')->getValue()[0]['target_id'];
    $empresa = \Drupal::entityTypeManager()->getStorage('group')->load($id_empresa)->label();
    $id_indicador = $node->get('field_indicador')->getValue()[0]['target_id'];
    $indicador = Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($id_indicador)->label();
    $code = search_code($indicador);
    $title = $empresa.' - '.$code;
    //Datos para generar variacion
    $base = $node ->get('field_linea_base')->getValue()[0]['value'];
    $medicion = $node ->get('field_ultima_medicion')->getValue()[0]['value'];
    $variacion = $medicion - $base;
    //Generar campo categoria);
    $parent = term_parent($id_indicador);
    //Agregar miembros a CT
    $miembros = list_members($id_empresa);
    $node->set('title',$title);
    $node->set('field_variacion',$variacion);
    $node->set('field_categoria_indicador',$parent);
    $node->set('field_miembros',$miembros);

  }
}

function list_members($id){
  $i=0;
  $empresa = \Drupal::entityTypeManager()->getStorage('group')->load($id);
  $members = $empresa->getMembers();
  foreach ($members as $member) {
    $id_members = $member->getUser();
    if ($id_members) {
      $id_member = $id_members->id();
      $miembros[$i]['target_id']=$id_member;
      $i++;
    }
  }
  return $miembros;
}

function term_parent($indicador){
  $term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($indicador);
  $parent = $term->get('parent')->getValue()[0]['target_id'];
  return $parent;
}

function pertenece_empresa($opciones_empresa){
  $ids_empresas = array_keys($opciones_empresa);
  $log = sizeof($ids_empresas);
  for ($i=1;$i<$log;$i++){
    $empresa = \Drupal::entityTypeManager()->getStorage('group')->load($ids_empresas[$i]);
    $members = $empresa->getMembers();
    foreach ($members as $member){
      $id_members = $member->getUser();
      if($id_members) {
        $id_member = $id_members->id();
        if($id_member == \Drupal::currentUser()->id()){
          $options[$ids_empresas[$i]]=$opciones_empresa[$ids_empresas[$i]];
        }
      }
    }
  }
  if ($options){
    return $options;
  }

  return ;

}

function search_code($indicador_asignado){
  $storage = \Drupal::entityTypeManager()->getStorage('node');
  $query = $storage->getQuery()->condition('type','banco_de_indicadores');
  $ids = $query->execute();
  $indicadores = !empty($ids) ? $storage->loadMultiple($ids) : NULL;
  foreach ($indicadores as $indicador){
    $name = $indicador->get('field_nombre_del_indicador')->value;
    if($name == $indicador_asignado){
      $code = $indicador->label();
      return $code;
    }
  }
  return ;
}
