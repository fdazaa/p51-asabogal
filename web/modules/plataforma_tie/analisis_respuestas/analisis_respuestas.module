<?php

use \Drupal\quiz\Entity\QuizQuestionAnsweringForm;


/**
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 * @param $form_id
 *
 */

function analisis_respuestas_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  if($form_id == 'quiz_question_answering_form') {
    $form['#submit'][]= 'analisis_respuestas_form_submit';
  }

}

function analisis_respuestas_form_submit(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  // Aquí el código al hacer submit.
  $last = $form['navigation']['#last'];
  if($last == 1){
    foreach ($form_state->getBuildInfo() as $item){
      foreach ($item as $items){
        if($items instanceof  Drupal\quiz\Entity\QuizResult){
          $id = $items->id();
        }
      }
    }
    generadorindicadores($id);
    crearesultados();
  }
}

function analisis_respuestas_page_attachments_alter(array &$attachments) {
  $url = \Drupal::service('path.current')->getPath();
  if($url == "/node/119"){
    dpm($url);
  }
}









function crearresultadosempresa(){

}


// Genera Reultados

function crearesultados(){
  $i = 0;
  $k = 0;
  $storage = \Drupal::entityTypeManager()->getStorage('node');
  $query = $storage->getQuery()
    -> condition('type','analisis_de_respuesta')
    -> condition('status',1);
  $ids = $query->execute();
  $nodes = !empty($ids) ? $storage->loadMultiple($ids):NULL;
  foreach ($nodes as $node){
    $id_author = $node->uid->target_id;
    $id = \Drupal::currentUser()->id();
    if($id_author == $id){
      $origen=$node->get('field_origen')->getString();
      if($origen == 'Adopción'){
        $adopcion = $node->get('field_total')->value;
        $i++;
      }elseif ($origen == 'Apropiación'){
        $apropiacion = $node -> get('field_total')->value;
        $k++;
      }
    }
  }
  $j = $i + $k;
  if($j==2) {
    $resultado = ($adopcion + $apropiacion)/2;
    $name = \Drupal::currentUser()->getAccountName();
    generadorresultados($name,$adopcion, $apropiacion, $resultado);
  }
}

function generadorresultados($name,$adopcion, $apropiacion, $resultado){
  $values = [
    'title' => $name,
    'type' => 'resultados',
    'field_total_adopcion' => $adopcion,
    'field_total_apropiacion' => $apropiacion,
    'field_total_ipd' => $resultado

  ];

  $node = \Drupal::entityTypeManager()->getStorage('node')->create($values);
  $node->save();

  $gid = buscargrupo();

  $values = [
    'type' => 'empresas-group_node-resultados',
    'gid' => $gid,
    'entity_id' => ['target_id'=>$node->id()],
  ];

  $entity = \Drupal::entityTypeManager()->getStorage('group_content')->create($values);
  $entity ->save();
}

//Genera Indicadores

function generadorindicadores($id) {
  $i=0;
  $result=[];

  $array_adopcion =[];
  $proceso1 =[]; $proceso2 =[]; $proceso3 =[]; $proceso4 =[]; $proceso5 =[]; $proceso6 =[]; $proceso7 =[]; $proceso8 =[]; $proceso9 =[];
  $proceso10 =[]; $proceso11 =[]; $proceso12 =[]; $proceso13 =[]; $proceso14 =[]; $proceso15 =[]; $proceso16 =[];

  $categoria1 =[];    $categoria2 =[];    $categoria3 =[];    $categoria4 =[];    $categoria5 =[];

  $tmp =[];
  $ids_answer = \Drupal::entityTypeManager()->getStorage('quiz_result_answer')->getQuery()->execute();
  $quiz_answer = !empty($ids_answer) ? \Drupal::entityTypeManager()->getStorage('quiz_result_answer')->loadMultiple($ids_answer):[];
  foreach ($quiz_answer as $answers){
    if($answers->referencedEntities()[0]->id() == $id){
      $id_question = $answers->referencedEntities()[1]->id(); // Extrae ID de las preguntas
      $storage = \Drupal::entityTypeManager()->getStorage('quiz_question');
      $query = $storage->getQuery();
      $ids_questions = $query->execute();
      $questions = !empty($ids_questions) ? $storage->loadMultiple($ids_questions):[];
      foreach ($questions as $question){
        $id_qs = $question->id();
        if($id_qs == $id_question){
          $tipo_qs = $question->get('field_tipo')->entity;
          $tipo_1 = $tipo_qs ? $tipo_qs->get('field_tipo_form')[0]->getString() : NULL;
          if($tipo_1 == 'adopcion'){
            $tipo = 'Adopción';
          }elseif ($tipo_1 == 'apropiacion'){
            $tipo = 'Apropiación';
          }
            $clase_qs = $question->get('field_clasificacion')->entity;
            $clase = $clase_qs ? $clase_qs->get('field_id_estatico_terms')[0]->getString() :NULL;
            if($clase == 'P') {
              $proceso_txt = $question->get('field_categoria_proceso')->referencedEntities()[1];
              $process = $proceso_txt ? $proceso_txt->get('field_id_proceso')[0]->getString(): NULL;
              $cat = $proceso_txt ? $proceso_txt->get('field_id_categoria')[0]->getString(): NULL;
              $score = $answers->getPoints();
              //-----------------------------------------------------------------------------------------
              //if($tipo == 'adopcion'){

              if($process == 'proceso1'){$log = sizeof($proceso1); $proceso1[$log] = $score;}
              elseif($process == 'proceso2'){$log = sizeof($proceso2);$proceso2[$log] = $score;}
              elseif($process == 'proceso3'){$log = sizeof($proceso3);$proceso3[$log] = $score;}
              elseif($process == 'proceso4'){$log = sizeof($proceso4);$proceso4[$log] = $score;}
              elseif($process == 'proceso5'){$log = sizeof($proceso5);$proceso5[$log] = $score;}
              elseif($process == 'proceso6'){$log = sizeof($proceso6);$proceso6[$log] = $score;}
              elseif($process == 'proceso7'){ $log = sizeof($proceso7);$proceso7[$log] = $score;}
              elseif($process == 'proceso8'){ $log = sizeof($proceso8);$proceso8[$log] = $score;}
              elseif($process == 'proceso9'){ $log = sizeof($proceso9);$proceso9[$log] = $score;}
              elseif($process == 'proceso10'){$log = sizeof($proceso10);$proceso10[$log] = $score;}
              elseif($process == 'proceso11'){$log = sizeof($proceso11);$proceso11[$log] = $score;}
              elseif($process == 'proceso12'){$log = sizeof($proceso12);$proceso12[$log] = $score;}
              elseif($process == 'proceso13'){$log = sizeof($proceso13);$proceso13[$log] = $score;}
              elseif($process == 'proceso14'){$log = sizeof($proceso14);$proceso14[$log] = $score;}
              elseif($process == 'proceso15'){$log = sizeof($proceso15);$proceso15[$log] = $score;}
              else{$log = sizeof($proceso16);$proceso16[$log] = $score;}

              //}
              //-----------------------------------------------------------------------------------------


            }elseif($clase == 'TC'){

              $categoria_txt = $question->get('field_categoria_proceso')->referencedEntities()[0];
              $categoria = $categoria_txt ? $categoria_txt->get('field_id_categoria')[0]->getString(): NULL;
              $score = $answers->getPoints();
              if($categoria == 'categoria1'){$log = sizeof($categoria1); $categoria1[$log] = $score;}
              elseif($categoria == 'categoria2'){$log = sizeof($categoria2);$categoria2[$log] = $score;}
              elseif($categoria == 'categoria3'){$log = sizeof($categoria3);$categoria3[$log] = $score;}
              elseif($categoria == 'categoria4'){$log = sizeof($categoria4);$categoria4[$log] = $score;}
              elseif($categoria == 'categoria5'){$log = sizeof($categoria5);$categoria5[$log] = $score;}

            }else{
              $score = $answers->getPoints();
              $log=sizeof($tmp);
              $tmp[$log]=$score;
            }
            $cc[0]=$categoria1;     $cc[1]=$categoria2;     $cc[2]=$categoria3;      $cc[3]=$categoria4;     $cc[4]=$categoria5;


            //ARRAY DE ADOPCION
            $array_adopcion[0]=$proceso1; $array_adopcion[1]=$proceso2; $array_adopcion[2]=$proceso3; $array_adopcion[3]=$proceso4;
            $array_adopcion[4]=$proceso5; $array_adopcion[5]=$proceso6; $array_adopcion[6]=$proceso7; $array_adopcion[7]=$proceso8;
            $array_adopcion[8]=$proceso9; $array_adopcion[9]=$proceso10; $array_adopcion[10]=$proceso11; $array_adopcion[11]=$proceso12;
            $array_adopcion[12]=$proceso13; $array_adopcion[13]=$proceso14; $array_adopcion[14]=$proceso15; $array_adopcion[15]=$proceso16;
         //}
        }
      }
    }
  }

  $nombre_user = \Drupal::currentUser()->getAccountName();
  foreach ($array_adopcion as $proceso){
    $result[$i]=calculodeprocesos($proceso); //resultados pro proceso
    $i++;
  }
  $cpp = [];
  $cpp[0]= [$result[0], $result[1]];
  $cpp[1]= [$result[2], $result[3],    $result[4]];
  $cpp[2]= [$result[5], $result[6],    $result[7],    $result[8],    $result[9]];
  $cpp[3]= [$result[10], $result[11],  $result[12]];
  $cpp[4]= [$result[13], $result[14],  $result[15]];

  for($i=0; $i<= sizeof($cpp)-1; $i++) {
    $result_cpp[$i] = calculodecategoriasproceso($cpp[$i]); //resultados de promedios por categoria
  }

  for($i=0; $i<= sizeof($cc)-1; $i++) {
    $result_ctc[$i] = calculodeprocesos($cc[$i]); //resultados de promedios por categoria
  }

  $result_tmp=calculodeprocesos($tmp);


  $result_total = calculofinal($result_cpp,$result_ctc,$result_tmp);

  $total = calculototal($result_total);

 adopcionCreateIndicadores($result,$result_cpp,$result_ctc, $result_tmp,$result_total,$total,$nombre_user,$tipo);


  return ['#markup' => 'Ruta que crear entidades'];
}

function calculototal($result){
  for($i=0; $i<=4;$i++){
    $total = $total+$result[$i];
  }
  $rt = $total/5;
  return $rt;
}

function calculofinal($cpp,$ctc,$tmp){
  $log = 1;
  for($i=0;$i<=4;$i++){
    if($cpp[$i]!=[]){$log++;}
    if($ctc[$i]!=[]){$log++;}

    $result_total[$i]=($cpp[$i] + $ctc[$i] + $tmp)/$log;
    $log=1;
  }
  return $result_total;
}

function  calculodeprocesos($proceso){
  $suma =0;
  if($proceso == []){
    return;
  }
  foreach ($proceso as $result){
    $suma = $suma +$result;
  }
  $longitud = sizeof($proceso);
  $valor_maximo = $longitud * 60; //cambiar 60, por valor de maximo score
  $porcentaje = ($suma*100)/$valor_maximo;

  return $porcentaje;

}

function  calculodecategoriasproceso($result_cpp){

  if($result_cpp == []){return ;};

  foreach ($result_cpp as $rp){
    if($rp == []){$rp=0;}
    else{$log++;}
    $suma=$suma+$rp;
  }
  if($log==0){return;}
  $cppt=$suma/$log;

  return $cppt;

}

function adopcioncreateindicadores($p,$rcp,$ctc,$tmp,$tad,$rt,$name,$form){


  $values = [
    'title' => $name,
    'type' => 'analisis_de_respuesta',
    'field_origen' => $form,
    'field_proceso_1'=> $p[0],
    'field_proceso_2'=> $p[1],
    'field_proceso_3'=> $p[2],
    'field_proceso_4'=> $p[3],
    'field_proceso_5'=> $p[4],
    'field_proceso_6'=> $p[5],
    'field_proceso_7'=> $p[6],
    'field_proceso_8'=> $p[7],
    'field_proceso_9'=> $p[8],
    'field_proceso_10'=> $p[9],
    'field_proceso_11'=> $p[10],
    'field_proceso_12'=> $p[11],
    'field_proceso_13'=> $p[12],
    'field_proceso_14'=> $p[13],
    'field_proceso_15'=> $p[14],
    'field_proceso_16'=> $p[15],
    'field_ppc1'=> $rcp[0],
    'field_ppc2'=> $rcp[1],
    'field_ppc3'=> $rcp[2],
    'field_ppc4'=> $rcp[3],
    'field_ppc5'=> $rcp[4],
    'field_ptcc1'=> $ctc[0],
    'field_ptcc2'=> $ctc[1],
    'field_ptcc3'=> $ctc[2],
    'field_ptcc4'=> $ctc[3],
    'field_ptcc5'=> $ctc[4],
    'field_tmp'=> $tmp,
    'field_c1ad'=>$tad[0],
    'field_c2ad'=>$tad[1],
    'field_c3ad'=>$tad[2],
    'field_c4ad'=>$tad[3],
    'field_c5ad'=>$tad[4],
    'field_total' => $rt
  ];

  $gid = buscargrupo();

  $node = \Drupal::entityTypeManager()->getStorage('node')->create($values);
  $node->save();

  $values = [
    'type' => 'group_content_type_0b89a4774c92a',
    'gid' => $gid,
    'entity_id' => ['target_id' => $node->id()],
  ];

  $entity = \Drupal::entityTypeManager()->getStorage('group_content')->create($values);
  $entity->save();

}

function buscargrupo(){
  $storage=\Drupal::entityTypeManager()->getStorage('group');
  $query = $storage->getQuery();
  $ids = $query->execute();
  $groups =!empty($ids) ? $storage->loadMultiple($ids):[];
  foreach($groups as $group){
    $members = $group->getMembers();

    foreach($members as $member){
      $id_members = $member->getUser();
      if ($id_members) {  $id_member=$id_members->id();}
      $id_general = \Drupal::currentUser()->id(); //EXTRAER ID DEL USUARIO LOG IN
      if($id_general == $id_member){
        $gid = $group->id();
      }
    }
  }
  return $gid;
}


