<?php

use \Drupal\user;

function user_subgroup_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  if($form_id == 'group_proyectos_add_form'||$form_id == 'group_proyectos_edit_form'){
    $url = \Drupal::service('path.current')->getPath();
    $arguments = explode('/', $url);
    foreach ($arguments as $value) {
      if (is_numeric($value)) {
        $gid=$value;
        break;
      }
    }
    $all_members = $form['field_colaborador']['widget']['#options'];

    if ($form_id == 'group_proyectos_edit_form'){
      $active = active($gid,'proyectos');
      $form['field_colaborador']['widget']['#default_value']=$active;
      $gid = extractidroot($gid,'proyectos');
    }
    $gid = intval($gid);
    $array = compararmiembro($all_members,$gid);
    $form['field_colaborador']['widget']['#options'] = $array;
    $form['actions']['submit']['#submit'][]='add_members_for_proyects_form_submit';
  }

  elseif($form_id == 'group_tareas_add_form'){
    $all_members = $form['field_colaborador']['widget']['#options'];
    $url = \Drupal::service('path.current')->getPath();
    $arguments = explode('/', $url);
    $gid = $arguments[2];
    $array = compararmiembro($all_members,$gid);
    $form['field_colaborador']['widget']['#options'] = $array;
    $form['field_id_proyecto']['widget'][0]['value']['#default_value'] = $gid;
    $form['actions']['submit']['#submit'][]='add_members_for_proyects_form_submit';
  }

  elseif($form_id == 'group_tareas_edit_form'){
    $url = \Drupal::service('path.current')->getPath();
    $arguments = explode('/', $url);

    $all_members = $form['field_colaborador']['widget']['#options'];
    //$gid = extractidroot($arguments[2],'tareas');
    $gid=$form['field_id_proyecto']['widget'][0]['value']['#default_value'];
    $array = compararmiembro($all_members,$gid);
    $form['field_colaborador']['widget']['#options'] = $array;
    $form['field_id_proyecto']['widget'][0]['value']['#default_value'] = $gid;



    $active = active($arguments[2],'tareas');
    $form['field_colaborador']['widget']['#default_value']=$active;


    $form['actions']['submit']['#submit'][]='add_members_for_proyects_form_submit';
  }
}



function add_members_for_proyects_form_submit(&$form, \Drupal\Core\Form\FormState $formState){

  $id_subgroup =$formState->getFormObject()->getEntity()->id();
  $text = $form['#attributes']['class'][0];
  $type = explode('-',$text);
  $ids_colaboradores = $form['field_colaborador']['widget']['#value'];
  call_members($id_subgroup, $ids_colaboradores,$type[1]);
  $all_members = $form['field_colaborador']['widget']['#options'];
  deletemiembro($id_subgroup,$all_members,$ids_colaboradores);
}


function active($gid,$gt){
  $i=0; $active =[];
  $storage = \Drupal::entityTypeManager()->getStorage('group');
  $query = $storage->getQuery()->condition('type',$gt)->condition('status',1);
  $ids = $query->execute();
  $groups = !empty($ids) ? $storage->loadMultiple($ids):NULL;
  foreach ($groups as $group){
    if ($group->id() == $gid){
      $members = $group->getMembers();
      foreach ($members as $member) {
        $id_members = $member->getUser();
        if ($id_members) {
          $id_member = $id_members->id();
          $active[$i]=$id_member;
          $i++;
        }
      }
      $log = sizeof($active);
      for ($i=0;$i<($log); $i++){
        if($i!=$log-1){
          $active[$i]=$active[$i+1];
        }
      }
      return $active;

    }
  }

}


function deletemiembro($id_subgrupo,$all_members,$ids_colaboradores){

  foreach ($ids_colaboradores as $id_colaborador){
    $posicion=array_search($id_colaborador,$ids_colaboradores);
    unset($all_members[$posicion]);
  }
  $ids_users = array_keys($all_members);
  foreach ($ids_users as $id_user){
    $user = \Drupal\user\Entity\user::load($id_user);
    $group = \Drupal::entityTypeManager()->getStorage('group')->load($id_subgrupo);
    $group->removeMember($user);
    $group->save();
  }
}


function compararmiembro($all_members,$gid){
  $i =0; $colaboradores = [];
  $storage = \Drupal::entityTypeManager()->getStorage('group');
  $query = $storage->getQuery()->condition('status',1);
  $ids = $query->execute();
  $groups = !empty($ids) ? $storage->loadMultiple($ids):NULL;
  foreach ($groups as $group){
    if($group->id() == $gid){
      $members = $group->getMembers();
      foreach ($members as $member){
        $id_members = $member->getUser();
        if($id_members) { $id_member = $id_members->id();
          $ids_users = array_keys($all_members);
          foreach ($ids_users as $id_user){
            $rol_member = $id_members->getRoles();

            if ($id_user == $id_member  &&$id_user!=\Drupal::currentUser()->id()){
              $colaboradores[$id_user]=$all_members[$id_user];
            }
          }
        }
      }
      return $colaboradores;
    }

  }
}


function call_members($id_subgroup, $ids_colaboradores,$gt){
  $gid = extractidroot($id_subgroup,$gt);
  $storage = \Drupal::entityTypeManager()->getStorage('group');
  $query = $storage->getQuery()->condition('status',1);
  $ids = $query->execute();
  $groups = !empty($ids) ? $storage->loadMultiple($ids):NULL;
  foreach ($groups as $group){
    $members = $group->getMembers();
    if($group->id() == $gid){
      foreach ($members as $member){
        $id_members = $member->getUser();
        if($id_members){
          $id_member = $id_members->id();
          foreach ($ids_colaboradores as $id_colaborador){
            $rol_member = $id_members->getRoles();
            if($rol_member[1]!='asesor'){
              if ($id_colaborador == $id_member){
                add_member($id_subgroup,$id_member,$gt);
              }
            }
          }
        }
      }
    }
  }
}


function extractidroot($id_subgroup,$gt){
  $storage = \Drupal::entityTypeManager()->getStorage('group');
  $query = $storage->getQuery()->condition('type',$gt)->condition('status',1);
  $ids = $query->execute();
  $groups = !empty($ids) ? $storage->loadMultiple($ids):NULL;
  foreach ($groups as $group){
    if ($group->id() == $id_subgroup){
      dpm($group);
      $gid = $group->get('subgroup_tree')->getValue()[0]['value'];
      return $gid;
    }
  }
}



function add_member($id_subgroup,$id_member,$gt){
  $user = \Drupal\user\Entity\user::load($id_member);
  $group = \Drupal::entityTypeManager()->getStorage('group')->load($id_subgroup);
  $group->addMember($user,['group_roles'=>$gt.'-'.'colaborador']);
  $group->save();
}
